services:
  postgres:
    container_name: postgres
    image: postgres:alpine3.17
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - backend-network
    volumes:
      - ./database-storage:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped

  postgres-backup:
    container_name: postgres-backup
    image: prodrigestivill/postgres-backup-local:15-alpine-8d72d2d
    user: postgres:postgres
    networks:
      - backend-network
    volumes:
      - ./database-backups:/backups
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_EXTRA_OPTS: "-Z6 --schema=public --blobs"
      SCHEDULE: "@daily"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
    restart: unless-stopped
    links:
      - postgres
    depends_on:
      - postgres

  adminer:
    container_name: adminer
    image: adminer:4.8.1
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}
    networks:
      - backend-network
    environment:
      # all available designs are in the 'Alternative designs' section at: https://www.adminer.org/en/
      ADMINER_DESIGN: pappu687
    restart: unless-stopped
    depends_on:
      - postgres

  server:
    container_name: server
    # use 'latest' or 'devel' tag
    image: ghcr.io/lukas-kratochvil/mafil-psq-server:latest
    ports:
      - ${REG_SERVER_PORT}:${REG_SERVER_PORT}
    networks:
      - backend-network
    environment:
      - NODE_ENV=production
      - PORT=${REG_SERVER_PORT}
      - DATABASE_URL=${REG_DATABASE_URL}
    volumes:
      - ./server-config.yaml:/usr/src/app/config.yaml:ro
      - ./logs/server:/usr/src/app/logs
    restart: unless-stopped
    depends_on:
      - postgres

  web:
    container_name: web
    # use 'latest' or 'devel' tag
    image: ghcr.io/lukas-kratochvil/mafil-psq-web:latest
    ports:
      - 80:80
      - 443:443
    networks:
      - backend-network
      - frontend-network
    environment:
      - NODE_ENV=production
      # 'server' is the name of our docker-compose backend API service that runs on the same machine as this Nginx reverse proxy service
      - SERVER_ADDRESS=server:${REG_SERVER_PORT}
    volumes:
      - ./web-config.json:/mnt/config.json:ro
      # - ./certs:/etc/nginx/certs
      - ./logs/web:/var/log/nginx
    restart: unless-stopped
    depends_on:
      - server

networks:
  backend-network:
  frontend-network:

volumes:
  database-storage:
