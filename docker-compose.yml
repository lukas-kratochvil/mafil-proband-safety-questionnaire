version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:alpine3.17
    ports:
      - 127.0.0.1:${DB_PORT}:${DB_PORT}
    networks:
      - backend-network
    volumes:
      - ./backend/database-storage:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    restart: unless-stopped

  adminer:
    container_name: adminer
    image: adminer:4.8.1
    ports:
      - 127.0.0.1:${ADMINER_PORT}:${ADMINER_PORT}
    networks:
      - backend-network
    environment:
      ADMINER_DESIGN: nette
    restart: unless-stopped
    depends_on:
      - postgres

  server:
    container_name: server
    image: server:1.0.0
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: production
    ports:
      - 127.0.0.1:${SERVER_PORT}:${SERVER_PORT}
    networks:
      - backend-network
    environment:
      - PORT=${SERVER_PORT}
      - DATABASE_URL=${DATABASE_URL}
    restart: unless-stopped
    depends_on:
      - postgres

  server-dev:
    container_name: server-dev
    image: server-dev:1.0.0
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: development
    command: npm run start:dev
    ports:
      - 127.0.0.1:${DEV_SERVER_PORT}:${DEV_SERVER_PORT}
    networks:
      - backend-network
    environment:
      - PORT=${DEV_SERVER_PORT}
      - DATABASE_URL=${DATABASE_URL}
    restart: unless-stopped
    depends_on:
      - postgres

  web:
    container_name: web
    image: web:1.0.0
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      target: production
    ports:
      - 127.0.0.1:${CLIENT_PORT}:${NGINX_PORT}
    networks:
      - backend-network
      - frontend-network
    environment:
      - NGINX_PORT=${NGINX_PORT}
    restart: unless-stopped

  web-dev:
    container_name: web-dev
    image: web-dev:1.0.0
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      target: development
    command: npm run dev
    ports:
      - 127.0.0.1:${DEV_CLIENT_PORT}:${DEV_CLIENT_PORT}
    networks:
      - backend-network
      - frontend-network
    environment:
      - PORT=${DEV_CLIENT_PORT}
      - VITE_SERVER_PORT=${DEV_SERVER_PORT}
    restart: unless-stopped

networks:
  backend-network:
  frontend-network:

volumes:
  database-storage:
