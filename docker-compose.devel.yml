version: '3.3'

services:
  postgres:
    container_name: postgres
    image: postgres:alpine3.17
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - backend-network
    volumes:
      - ./database-storage:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    restart: unless-stopped

  adminer:
    container_name: adminer
    image: adminer:4.8.1
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}
    networks:
      - backend-network
    environment:
      TZ: ${TIMEZONE}
      ADMINER_DESIGN: rmsoft
    restart: unless-stopped
    depends_on:
      - postgres

  server:
    container_name: server
    image: ghcr.io/lukas-kratochvil/mafil-psq-server:devel
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    networks:
      - backend-network
    environment:
      - NODE_ENV=production
      - TZ=${TIMEZONE}
      - PORT=${SERVER_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - MAFILDB_API_URL=${MAFILDB_API_URL}
      - API_KEY_FOR_WEB=${SERVER_API_KEY_FOR_WEB}
      - WEB_URL=${WEB_URL}
    restart: unless-stopped
    depends_on:
      - postgres

  web:
    container_name: web
    image: ghcr.io/lukas-kratochvil/mafil-psq-web:devel
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    networks:
      - backend-network
      - frontend-network
    environment:
      - NODE_ENV=production
      - TZ=${TIMEZONE}
      - PORT=${WEB_PORT}
      - VITE_SERVER_API_KEY=${SERVER_API_KEY_FOR_WEB}
      - VITE_SERVER_URL=${SERVER_URL}
      - VITE_MAFILDB_API_URL=${MAFILDB_API_URL}
    restart: unless-stopped

networks:
  backend-network:
  frontend-network:

volumes:
  database-storage:
