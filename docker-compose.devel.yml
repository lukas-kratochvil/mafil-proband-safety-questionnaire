version: '3.3'

services:
  postgres:
    container_name: postgres
    image: postgres:alpine3.17
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - backend-network
    volumes:
      - ./database-storage:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped

  postgres-backup:
    container_name: postgres-backup
    image: prodrigestivill/postgres-backup-local:15-alpine-8d72d2d
    user: postgres:postgres
    networks:
      - backend-network
    volumes:
      - ./database-backups:/backups
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_EXTRA_OPTS: "-Z6 --schema=public --blobs"
      SCHEDULE: "@daily"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
    restart: unless-stopped
    links:
      - postgres
    depends_on:
      - postgres

  adminer:
    container_name: adminer
    image: adminer:4.8.1
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}
    networks:
      - backend-network
    environment:
      ADMINER_DESIGN: rmsoft
    restart: unless-stopped
    depends_on:
      - postgres

  server:
    container_name: server
    image: ghcr.io/lukas-kratochvil/mafil-psq-server:devel
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    networks:
      - backend-network
    environment:
      - NODE_ENV=production
      - PORT=${SERVER_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - THROTTLE_TTL=${THROTTLE_TTL}
      - THROTTLE_LIMIT=${THROTTLE_LIMIT}
      - WEB_API_KEY=${WEB_API_KEY}
      - PDF_OPERATOR_LANGUAGE_CODE=${PDF_OPERATOR_LANGUAGE_CODE}
      - WEB_URL=${WEB_URL}
    volumes:
      - ./logs/server:/usr/src/app/logs
    restart: unless-stopped
    depends_on:
      - postgres

  web:
    container_name: web
    image: ghcr.io/lukas-kratochvil/mafil-psq-web:devel
    ports:
      - 80:80
      - 443:443
    networks:
      - backend-network
      - frontend-network
    environment:
      - NODE_ENV=production
      # 'server' is the name of our docker-compose backend API service that runs on the same machine as this Nginx reverse proxy
      - SERVER_ADDRESS=server:${SERVER_PORT}
      - WEB_API_KEY=${WEB_API_KEY}
      - MAFILDB_API_URL=${MAFILDB_API_URL}
    volumes:
      - ./certs:/etc/nginx/certs
      - ./logs/web:/var/log/nginx
    restart: unless-stopped
    depends_on:
      - server

networks:
  backend-network:
  frontend-network:

volumes:
  database-storage:
