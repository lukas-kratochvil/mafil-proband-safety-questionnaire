// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Operator {
  id String @id @default(uuid()) @db.Uuid

  finalizedVisits AdditionalVisitFormInfo[] @relation(name: "FinalizedBy")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  name    String       @db.VarChar(200)
  surname String       @db.VarChar(200)
  uco     String       @unique @db.VarChar(8)
  email   String       @unique
  role    OperatorRole @default(MR)
  isValid Boolean      @default(true)
}

enum OperatorRole {
  MR
  MR_HIGH_PERM
}

model VisitForm {
  id String @id @default(uuid()) @db.Uuid

  probandInfo       ProbandInfo              @relation(fields: [probandInfoId], references: [id])
  probandInfoId     String                   @db.Uuid
  probandLanguage   Language                 @relation(fields: [probandLanguageId], references: [id])
  probandLanguageId String                   @db.Uuid
  answers           Answer[]
  additionalInfo    AdditionalVisitFormInfo?
  additionalInfoId  String?                  @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  state   VisitFormState @default(NEW)
}

enum VisitFormState {
  NEW
  IN_APPROVAL
  DELETED
}

model AdditionalVisitFormInfo {
  id String @id @default(uuid()) @db.Uuid

  visitForm   VisitForm @relation(fields: [visitFormId], references: [id])
  visitFormId String    @unique @db.Uuid
  finalizer   Operator  @relation(name: "FinalizedBy", fields: [finalizerId], references: [id])
  finalizerId String    @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  projectId      String    @db.VarChar(35)
  projectAcronym String    @db.VarChar(30)
  deviceId       String    @db.VarChar(35)
  deviceName     String    @db.VarChar(200)
  measuredAt     DateTime
  finalizedAt    DateTime
}

model ProbandInfo {
  id String @id @default(uuid()) @db.Uuid

  visitForms       VisitForm[]
  gender           Gender         @relation(fields: [genderId], references: [id])
  genderId         String         @db.Uuid
  handedness       Handedness     @relation(fields: [handednessId], references: [id])
  handednessId     String         @db.Uuid
  nativeLanguage   NativeLanguage @relation(fields: [nativeLanguageId], references: [id])
  nativeLanguageId String         @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  name                    String   @db.VarChar(200)
  surname                 String   @db.VarChar(200)
  personalId              String   @db.VarChar(50)
  birthdate               DateTime
  heightCm                Float
  weightKg                Float
  visualCorrectionDioptre Float
  email                   String?  @default("")
  phone                   String?  @default("")
}

model Answer {
  id String @id @default(uuid()) @db.Uuid

  visitForm   VisitForm @relation(fields: [visitFormId], references: [id])
  visitFormId String    @db.Uuid
  question    Question  @relation(fields: [questionId], references: [id])
  questionId  String    @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  answer  String  @db.VarChar(3)
  comment String? @default("")
}

model Question {
  id String @id @default(uuid()) @db.Uuid

  answers            Answer[]
  translations       QuestionTranslation[]
  updatedQuestion    Question?             @relation(name: "QuestionHistory")
  previousQuestion   Question?             @relation(name: "QuestionHistory", fields: [previousQuestionId], references: [id])
  previousQuestionId String?               @unique @db.Uuid
  hiddenByGenders   GenderHiddenQuestion[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  partNumber     Int     @db.SmallInt
  mustBeApproved Boolean
  isValid        Boolean
}

model QuestionTranslation {
  id String @id @default(uuid()) @db.Uuid

  question   Question @relation(fields: [questionId], references: [id])
  questionId String   @db.Uuid
  language   Language @relation(fields: [languageId], references: [id])
  languageId String   @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  text String
}

model GenderHiddenQuestion {
  id String @id @default(uuid()) @db.Uuid

  gender     Gender   @relation(fields: [genderCode], references: [code])
  genderCode String   @db.VarChar(1)
  question   Question @relation(fields: [questionId], references: [id])
  questionId String   @db.Uuid

  @@unique([genderCode, questionId])
}

model Gender {
  id String @id @default(uuid()) @db.Uuid

  probandInfos    ProbandInfo[]
  translations    GenderTranslation[]
  hiddenQuestions GenderHiddenQuestion[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  code String @unique @db.VarChar(1)
}

model GenderTranslation {
  id String @id @default(uuid()) @db.Uuid

  gender     Gender   @relation(fields: [genderId], references: [id])
  genderId   String   @db.Uuid
  language   Language @relation(fields: [languageId], references: [id])
  languageId String   @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  text String

  @@unique([genderId, languageId])
}

model Handedness {
  id String @id @default(uuid()) @db.Uuid

  probandInfos ProbandInfo[]
  translations HandednessTranslation[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  code String @unique @db.VarChar(2)
}

model HandednessTranslation {
  id String @id @default(uuid()) @db.Uuid

  handedness   Handedness @relation(fields: [handednessId], references: [id])
  handednessId String     @db.Uuid
  language     Language   @relation(fields: [languageId], references: [id])
  languageId   String     @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  text String

  @@unique([handednessId, languageId])
}

model NativeLanguage {
  id String @id @default(uuid()) @db.Uuid

  probandInfos ProbandInfo[]
  translations NativeLanguageTranslation[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  code String @unique @db.VarChar(2)
  order Int? @unique @db.SmallInt
}

model NativeLanguageTranslation {
  id String @id @default(uuid()) @db.Uuid

  nativeLanguage   NativeLanguage @relation(fields: [nativeLanguageId], references: [id])
  nativeLanguageId String         @db.Uuid
  language         Language       @relation(fields: [languageId], references: [id])
  languageId       String         @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  text String

  @@unique([nativeLanguageId, languageId])
}

model Language {
  id String @id @default(uuid()) @db.Uuid

  visitForms                 VisitForm[]
  genderTranslations         GenderTranslation[]
  handednessTranslations     HandednessTranslation[]
  nativeLanguageTranslations NativeLanguageTranslation[]
  questionTranslations       QuestionTranslation[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  code String @unique @db.VarChar(5)
  name String @db.VarChar(25)
}
