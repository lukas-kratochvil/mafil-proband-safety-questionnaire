upstream server_api {
  # 'server' is the name of our docker-compose backend API service that runs on the same machine as this Nginx reverse proxy
  server server:${SERVER_PORT};
}

upstream adminer {
  # 'adminer' is the name of our docker-compose Adminer service that runs on the same machine as this Nginx reverse proxy
  server adminer:${ADMINER_PORT};
}

# HTTP requests
server {
  server_name ${WEB_DOMAIN};

  listen 80;      # IPv4
  listen [::]:80; # IPv6

  # use encrypted communication via HTTPS protocol
  return 301 https://$server_name$request_uri;
}

# HTTPS requests
server {
  server_name ${WEB_DOMAIN};

  listen 443 ssl;       # IPv4
  listen [::]:443 ssl;  # IPv6

  ssl_certificate /etc/nginx/certs/certificate.pem;
  ssl_certificate_key /etc/nginx/certs/private_key.pem;

  # MAFILDB API calls
  location /mafildb-api/ {
    proxy_pass ${MAFILDB_API_URL};
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    # Pass the HTTP Authorization header containing user's OIDC access_token to the MAFILDB API, so the request will proceed
    proxy_set_header Authorization $http_authorization;
    proxy_cache_bypass $http_upgrade;
  }

  # Adminer - our database manager
  location /adminer {
    proxy_pass http://adminer/;
    proxy_set_header Host $host;
  }

  # Our backend server API calls
  location ~ /server-api$ {
    # rewrite any URI ending with '.../server-api' just to '/graphql'
    rewrite ^ /graphql break;
    # proxy_pass must end without the trailing slash '/' to make the location regex rewrite work
    proxy_pass http://server_api;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    # authorization header to access API methods
    proxy_set_header API-KEY "${WEB_API_KEY}";
    proxy_cache_bypass $http_upgrade;
  }

  location / {
    # directory where the static content, mainly the index.html, is placed (the path is taken from the frontend/Dockerfile)
    root /usr/share/nginx/html;

    # setup fallback index.html file to use if it isn't found in the specified URI
    # - React app has only one index.html -> so this always fallback to the root index.html for every URI requested
    # - see also: https://linuxhint.com/use-nginx-try_files-directive/
    try_files $uri /index.html;
  }
}
